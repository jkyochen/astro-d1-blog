---
import type { Tag } from '../types/database';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import TagList from '../components/TagList.astro';
import { getSiteConfigWithFallback } from '../lib/config';

export interface Props {
	title: string;
	description: string;
	pubDate: Date;
	updatedDate?: Date;
	heroImage?: string;
	tags?: Tag[];
	  type?: 'article' | 'note';
}

const { title, description, pubDate, updatedDate, heroImage, tags, type } = Astro.props;

// Get site configuration for footer
const siteConfig = await getSiteConfigWithFallback(Astro.locals.runtime?.env.DB);
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
			.post-meta {
				display: flex;
				flex-direction: column;
				align-items: center;
				gap: 0.5rem;
				margin-bottom: 1rem;
			}
			.post-type {
				display: inline-flex;
				align-items: center;
				padding: 0.25rem 0.5rem;
				background: rgb(var(--accent));
				color: white;
				border-radius: 0.25rem;
				font-size: 0.75rem;
				text-transform: uppercase;
				font-weight: 600;
			}
		</style>
	</head>

	<body>
		<Header siteTitle={siteConfig.brandName} />
		<main>
			<article>
				<div class="hero-image">
					{heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="post-meta">
							<div class="date">
								<FormattedDate date={pubDate} />
								{
									updatedDate && (
										<div class="last-updated-on">
											Last updated on <FormattedDate date={updatedDate} />
										</div>
									)
								}
							</div>
							{type && (
								<span class="post-type">
									{type === 'article' ? 'Article' : 'Note'}
								</span>
							)}
							{tags && tags.length > 0 && (
								<TagList tags={tags} />
							)}
						</div>
						{title && type === 'article' && <h1>{title}</h1>}
						<hr />
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer siteTitle={siteConfig.brandName} socialLinks={siteConfig.socialLinks || []} />
	</body>
</html>
